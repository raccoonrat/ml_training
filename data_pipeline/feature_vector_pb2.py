# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: feature_vector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_gen@@
_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
  name='feature_vector.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x14\x66\x65\x61ture_vector.proto\"\x8c\x02\n\rFeatureVector\x12\x0c\n\x04time\x18\x01 \x01(\x03\x12\x0e\n\x06node_id\x18\x02 \x01(\t\x12\x15\n\rpower_consumption\x18\x03 \x01(\x02\x12\x0e\n\x06cpu_util\x18\x04 \x01(\x02\x12\x0e\n\x06mem_util\x18\x05 \x01(\x02\x12\x0e\n\x06disk_io\x18\x06 \x01(\x02\x12\x0e\n\x06net_io\x18\x07 \x01(\x02\x12\x0e\n\x06gpu_util\x18\x08 \x01(\x02\x12\x0e\n\x06gpu_mem\x18\t \x01(\x02\x12\x0e\n\x06temp_cpu\x18\n \x01(\x02\x12\x0e\n\x06temp_gpu\x18\x0b \x01(\x02\x12\x0e\n\x06fan_speed\x18\x0c \x01(\x02\x12\x0e\n\x06voltage\x18\r \x01(\x02\x12\x0e\n\x06current\x18\x0e \x01(\x02\x12\x0e\n\x06frequency\x18\x0f \x01(\x02\x12\x0e\n\x06cache_miss\x18\x10 \x01(\x02\x12\x0e\n\x06cache_hit\x18\x11 \x01(\x02\x12\x0e\n\x06context_switch\x18\x12 \x01(\x02\x12\x0e\n\x06page_fault\x18\x13 \x01(\x02\x12\x0e\n\x06interrupts\x18\x14 \x01(\x02\x12\x0e\n\x06load_avg\x18\x15 \x01(\x02\x12\x0e\n\x06process_count\x18\x16 \x01(\x02\x12\x0e\n\x06thread_count\x18\x17 \x01(\x02')
)




_FEATUREVECTOR = _descriptor.Descriptor(
  name='FeatureVector',
  full_name='FeatureVector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time', full_name='FeatureVector.time', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_id', full_name='FeatureVector.node_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='power_consumption', full_name='FeatureVector.power_consumption', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cpu_util', full_name='FeatureVector.cpu_util', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mem_util', full_name='FeatureVector.mem_util', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disk_io', full_name='FeatureVector.disk_io', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='net_io', full_name='FeatureVector.net_io', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpu_util', full_name='FeatureVector.gpu_util', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gpu_mem', full_name='FeatureVector.gpu_mem', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temp_cpu', full_name='FeatureVector.temp_cpu', index=9,
      number=10, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='temp_gpu', full_name='FeatureVector.temp_gpu', index=10,
      number=11, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fan_speed', full_name='FeatureVector.fan_speed', index=11,
      number=12, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='voltage', full_name='FeatureVector.voltage', index=12,
      number=13, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='current', full_name='FeatureVector.current', index=13,
      number=14, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='FeatureVector.frequency', index=14,
      number=15, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cache_miss', full_name='FeatureVector.cache_miss', index=15,
      number=16, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cache_hit', full_name='FeatureVector.cache_hit', index=16,
      number=17, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='context_switch', full_name='FeatureVector.context_switch', index=17,
      number=18, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_fault', full_name='FeatureVector.page_fault', index=18,
      number=19, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interrupts', full_name='FeatureVector.interrupts', index=19,
      number=20, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='load_avg', full_name='FeatureVector.load_avg', index=20,
      number=21, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='process_count', full_name='FeatureVector.process_count', index=21,
      number=22, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='thread_count', full_name='FeatureVector.thread_count', index=22,
      number=23, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=293,
)

DESCRIPTOR.message_types_by_name['FeatureVector'] = _FEATUREVECTOR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FeatureVector = _reflection.GeneratedProtocolMessageType('FeatureVector', (_message.Message,), dict(
  DESCRIPTOR = _FEATUREVECTOR,
  __module__ = 'feature_vector_pb2'
  # @@protoc_gen@@
  ))
_sym_db.RegisterMessage(FeatureVector)


# 添加便利方法
def feature_vector_to_dict(feature_vector):
    """
    将FeatureVector转换为字典
    
    Args:
        feature_vector: FeatureVector对象
        
    Returns:
        包含所有字段的字典
    """
    return {
        'time': feature_vector.time,
        'node_id': feature_vector.node_id,
        'power_consumption': feature_vector.power_consumption,
        'cpu_util': feature_vector.cpu_util,
        'mem_util': feature_vector.mem_util,
        'disk_io': feature_vector.disk_io,
        'net_io': feature_vector.net_io,
        'gpu_util': feature_vector.gpu_util,
        'gpu_mem': feature_vector.gpu_mem,
        'temp_cpu': feature_vector.temp_cpu,
        'temp_gpu': feature_vector.temp_gpu,
        'fan_speed': feature_vector.fan_speed,
        'voltage': feature_vector.voltage,
        'current': feature_vector.current,
        'frequency': feature_vector.frequency,
        'cache_miss': feature_vector.cache_miss,
        'cache_hit': feature_vector.cache_hit,
        'context_switch': feature_vector.context_switch,
        'page_fault': feature_vector.page_fault,
        'interrupts': feature_vector.interrupts,
        'load_avg': feature_vector.load_avg,
        'process_count': feature_vector.process_count,
        'thread_count': feature_vector.thread_count,
    }


def dict_to_feature_vector(data_dict):
    """
    将字典转换为FeatureVector
    
    Args:
        data_dict: 包含字段的字典
        
    Returns:
        FeatureVector对象
    """
    feature_vector = FeatureVector()
    
    # 设置所有字段
    for key, value in data_dict.items():
        if hasattr(feature_vector, key):
            setattr(feature_vector, key, value)
    
    return feature_vector


# 定义特征列名
FEATURE_COLUMNS = [
    'cpu_util', 'mem_util', 'disk_io', 'net_io', 'gpu_util', 'gpu_mem',
    'temp_cpu', 'temp_gpu', 'fan_speed', 'voltage', 'current', 'frequency',
    'cache_miss', 'cache_hit', 'context_switch', 'page_fault', 'interrupts',
    'load_avg', 'process_count', 'thread_count'
]

# 目标列名
TARGET_COLUMN = 'power_consumption'

# 元数据列名
METADATA_COLUMNS = ['time', 'node_id']
